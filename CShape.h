// CShape.h#pragma once#include <LPane.h>#include <LCommander.h>#include "DrawConstants.h"class LView;class CToolPalette;struct SShapeInfo {	Point startPt, endPt;	RGBColor frameColor, fillColor;};class CShape : public LPane, public LCommander  {		friend class CShapeAction;	public:		enum { class_ID = 'SPsa' };		CShape(LView* superCanvas, LWindow* superWindow);		virtual void FinishCreateSelf();	virtual void OrientFromInfo(const SShapeInfo& init);		virtual void GetInfo(SShapeInfo& outInfo) const;	virtual int GetClassInt() const = NULL;		virtual void GetStartEnd(Point& start, Point& end);		virtual void DrawSelf();		virtual void ClickSelf(const SMouseDownEvent& inMouseDown);	virtual void ResizeOrMove(Point clickPt, Boolean moveStart, Boolean moveEnd);	virtual void BeTarget();	virtual void DontBeTarget();		virtual void AdjustCursorSelf(Point inPortPt, const EventRecord& inMacEvent);		void FindCommandStatus(		CommandT	inCommand,		Boolean		&outEnabled,		Boolean		&outUsesMark,		Char16		&outMark,		Str255		outName);		virtual Boolean ObeyCommand(		CommandT	inCommand,		void		*ioParam);			virtual Boolean HandleKeyPress(const EventRecord &inKeyEvent);		virtual void WriteToStream(LStream* stream);	virtual void OrientFromStream(LStream* stream);		protected:	Point mStartPt, mEndPt;		RGBColor mFrameColor, mFillColor;		CToolPalette* mPalette;		virtual void SetStartEnd(Point start, Point end);		virtual void SetFrameColor(const RGBColor& newColor);	virtual void SetFillColor(const RGBColor& newColor);		virtual void DrawMyShape() = NULL;		virtual void DrawResizeKnobs();		virtual Boolean IsClickOnShape(Point clickPt);		virtual void CalcKnobRect(Rect &outRect, Point aroundPt) const;			Boolean PromptForColor(const RGBColor& oldColor, RGBColor& newColor);};